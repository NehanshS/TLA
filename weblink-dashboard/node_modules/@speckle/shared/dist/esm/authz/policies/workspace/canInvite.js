import { err, ok } from 'true-myth/result';
import { ensureWorkspaceRoleAndSessionFragment, ensureWorkspacesEnabledFragment } from '../../fragments/workspaces.js';
import { ensureMinimumServerRoleFragment } from '../../fragments/server.js';
import { Roles } from '../../../core/constants.js';
export const canInviteToWorkspacePolicy = (loaders) => async ({ userId, workspaceId }) => {
    const ensuredWorkspacesEnabled = await ensureWorkspacesEnabledFragment(loaders)({});
    if (ensuredWorkspacesEnabled.isErr)
        return err(ensuredWorkspacesEnabled.error);
    const ensuredServerRole = await ensureMinimumServerRoleFragment(loaders)({
        userId,
        role: Roles.Server.User
    });
    if (ensuredServerRole.isErr)
        return err(ensuredServerRole.error);
    const ensuredWorkspaceAccess = await ensureWorkspaceRoleAndSessionFragment(loaders)({
        userId: userId,
        workspaceId,
        role: Roles.Workspace.Admin
    });
    if (ensuredWorkspaceAccess.isErr)
        return err(ensuredWorkspaceAccess.error);
    return ok();
};
//# sourceMappingURL=canInvite.js.map