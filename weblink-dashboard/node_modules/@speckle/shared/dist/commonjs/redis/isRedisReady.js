"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isRedisReady = void 0;
const error_js_1 = require("../core/helpers/error.js");
// MIT Licensed: https://github.com/OptimalBits/bull/blob/develop/LICENSE.md
// Reference: https://github.com/OptimalBits/bull/blob/develop/lib/utils.js
const isRedisReady = (client) => {
    return new Promise((resolve, reject) => {
        if (client.status === 'ready') {
            resolve();
        }
        else {
            function handleReady() {
                client.removeListener('end', handleEnd);
                client.removeListener('error', handleError);
                resolve();
            }
            function handleError(e) {
                const err = (0, error_js_1.ensureError)(e, 'Unknown error in Redis client');
                client.removeListener('ready', handleReady);
                client.removeListener('error', handleError);
                reject(err);
            }
            function handleEnd() {
                client.removeListener('ready', handleReady);
                client.removeListener('error', handleError);
                reject(new Error('Redis connection ended'));
            }
            client.once('ready', handleReady);
            client.on('error', handleError);
            client.once('end', handleEnd);
        }
    });
};
exports.isRedisReady = isRedisReady;
//# sourceMappingURL=isRedisReady.js.map