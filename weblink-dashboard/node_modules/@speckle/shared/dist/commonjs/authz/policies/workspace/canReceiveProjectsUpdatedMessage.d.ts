import { ProjectNoAccessError, ProjectNotEnoughPermissionsError, ProjectNotFoundError, ServerNoAccessError, ServerNoSessionError, ServerNotEnoughPermissionsError, WorkspaceNoAccessError, WorkspaceNotEnoughPermissionsError, WorkspaceSsoSessionNoAccessError } from '../../domain/authErrors.js';
import { MaybeUserContext, ProjectContext, WorkspaceContext } from '../../domain/context.js';
import { Loaders } from '../../domain/loaders.js';
import { AuthPolicy } from '../../domain/policies.js';
/**
 * Whether the user can receive "workspace's projects updated" subscription messages about this project
 */
export declare const canReceiveWorkspaceProjectsUpdatedMessagePolicy: AuthPolicy<typeof Loaders.getProject | typeof Loaders.getEnv | typeof Loaders.getServerRole | typeof Loaders.getWorkspaceRole | typeof Loaders.getWorkspace | typeof Loaders.getWorkspaceSsoProvider | typeof Loaders.getWorkspaceSsoSession | typeof Loaders.getProjectRole | typeof Loaders.getAdminOverrideEnabled, MaybeUserContext & ProjectContext & WorkspaceContext, InstanceType<typeof ProjectNotFoundError | typeof ServerNoAccessError | typeof ServerNoSessionError | typeof ServerNotEnoughPermissionsError | typeof ProjectNoAccessError | typeof WorkspaceNoAccessError | typeof WorkspaceSsoSessionNoAccessError | typeof WorkspaceNotEnoughPermissionsError | typeof ProjectNotEnoughPermissionsError>>;
//# sourceMappingURL=canReceiveProjectsUpdatedMessage.d.ts.map