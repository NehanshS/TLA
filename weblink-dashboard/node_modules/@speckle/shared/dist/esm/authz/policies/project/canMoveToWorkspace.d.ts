import { ProjectNoAccessError, ProjectNotEnoughPermissionsError, ProjectNotFoundError, ServerNoAccessError, ServerNoSessionError, ServerNotEnoughPermissionsError, WorkspaceLimitsReachedError, WorkspaceNoAccessError, WorkspaceNoEditorSeatError, WorkspaceNotEnoughPermissionsError, WorkspaceProjectMoveInvalidError, WorkspaceReadOnlyError, WorkspacesNotEnabledError, WorkspaceSsoSessionNoAccessError } from '../../domain/authErrors.js';
import { MaybeProjectContext, MaybeUserContext, MaybeWorkspaceContext } from '../../domain/context.js';
import { AuthCheckContextLoaderKeys } from '../../domain/loaders.js';
import { AuthPolicy } from '../../domain/policies.js';
type PolicyLoaderKeys = typeof AuthCheckContextLoaderKeys.getEnv | typeof AuthCheckContextLoaderKeys.getProject | typeof AuthCheckContextLoaderKeys.getProjectRole | typeof AuthCheckContextLoaderKeys.getServerRole | typeof AuthCheckContextLoaderKeys.getWorkspace | typeof AuthCheckContextLoaderKeys.getWorkspaceRole | typeof AuthCheckContextLoaderKeys.getWorkspaceSsoProvider | typeof AuthCheckContextLoaderKeys.getWorkspaceSsoSession | typeof AuthCheckContextLoaderKeys.getWorkspacePlan | typeof AuthCheckContextLoaderKeys.getWorkspaceLimits | typeof AuthCheckContextLoaderKeys.getWorkspaceProjectCount | typeof AuthCheckContextLoaderKeys.getProjectModelCount | typeof AuthCheckContextLoaderKeys.getWorkspaceModelCount | typeof AuthCheckContextLoaderKeys.getWorkspaceSeat;
type PolicyArgs = MaybeUserContext & MaybeProjectContext & MaybeWorkspaceContext;
type PolicyErrors = InstanceType<typeof ProjectNotFoundError> | InstanceType<typeof ProjectNoAccessError> | InstanceType<typeof WorkspaceNoAccessError> | InstanceType<typeof WorkspaceSsoSessionNoAccessError> | InstanceType<typeof WorkspaceReadOnlyError> | InstanceType<typeof WorkspaceLimitsReachedError> | InstanceType<typeof WorkspacesNotEnabledError> | InstanceType<typeof WorkspaceProjectMoveInvalidError> | InstanceType<typeof ServerNoSessionError> | InstanceType<typeof ServerNoAccessError> | InstanceType<typeof ServerNotEnoughPermissionsError> | InstanceType<typeof WorkspaceNoEditorSeatError> | InstanceType<typeof WorkspaceNotEnoughPermissionsError> | InstanceType<typeof ProjectNotEnoughPermissionsError>;
export declare const canMoveToWorkspacePolicy: AuthPolicy<PolicyLoaderKeys, PolicyArgs, PolicyErrors>;
export {};
//# sourceMappingURL=canMoveToWorkspace.d.ts.map