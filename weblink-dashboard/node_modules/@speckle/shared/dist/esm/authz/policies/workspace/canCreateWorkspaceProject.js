import { err, ok } from 'true-myth/result';
import { Roles } from '../../../core/constants.js';
import { ensureWorkspaceProjectCanBeCreatedFragment, ensureWorkspaceRoleAndSessionFragment, ensureWorkspacesEnabledFragment } from '../../fragments/workspaces.js';
import { ensureMinimumServerRoleFragment } from '../../fragments/server.js';
export const canCreateWorkspaceProjectPolicy = (loaders) => async ({ userId, workspaceId }) => {
    const ensuredWorkspacesEnabled = await ensureWorkspacesEnabledFragment(loaders)({});
    if (ensuredWorkspacesEnabled.isErr)
        return err(ensuredWorkspacesEnabled.error);
    const ensuredServerRole = await ensureMinimumServerRoleFragment(loaders)({
        userId,
        role: Roles.Server.User
    });
    if (ensuredServerRole.isErr)
        return err(ensuredServerRole.error);
    const ensuredWorkspaceAccess = await ensureWorkspaceRoleAndSessionFragment(loaders)({
        userId: userId,
        workspaceId
    });
    if (ensuredWorkspaceAccess.isErr) {
        return err(ensuredWorkspaceAccess.error);
    }
    // Ensure workspace accepts new projects
    const ensuredProjectsAccepted = await ensureWorkspaceProjectCanBeCreatedFragment(loaders)({
        workspaceId,
        userId
    });
    if (ensuredProjectsAccepted.isErr) {
        return err(ensuredProjectsAccepted.error);
    }
    return ok();
};
//# sourceMappingURL=canCreateWorkspaceProject.js.map