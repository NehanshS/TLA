import { AuthPolicy } from '../../../domain/policies.js';
import { CommentContext, MaybeUserContext, ProjectContext } from '../../../domain/context.js';
import { Loaders } from '../../../domain/loaders.js';
import { CommentNotFoundError, ProjectNoAccessError, ProjectNotEnoughPermissionsError, ProjectNotFoundError, ServerNoAccessError, ServerNoSessionError, ServerNotEnoughPermissionsError, WorkspaceNoAccessError, WorkspaceNotEnoughPermissionsError, WorkspaceSsoSessionNoAccessError } from '../../../domain/authErrors.js';
export declare const canArchiveProjectCommentPolicy: AuthPolicy<typeof Loaders.getServerRole | typeof Loaders.getComment | typeof Loaders.getProject | typeof Loaders.getEnv | typeof Loaders.getWorkspaceRole | typeof Loaders.getWorkspace | typeof Loaders.getWorkspaceSsoProvider | typeof Loaders.getWorkspaceSsoSession | typeof Loaders.getProjectRole, MaybeUserContext & CommentContext & ProjectContext, InstanceType<typeof ProjectNoAccessError | typeof ProjectNotFoundError | typeof WorkspaceNoAccessError | typeof ServerNoAccessError | typeof ServerNoSessionError | typeof WorkspaceSsoSessionNoAccessError | typeof CommentNotFoundError | typeof WorkspaceNotEnoughPermissionsError | typeof ProjectNotEnoughPermissionsError | typeof ServerNotEnoughPermissionsError>>;
//# sourceMappingURL=canArchive.d.ts.map