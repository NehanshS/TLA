import { OrthographicCamera, PerspectiveCamera, ShaderMaterial, Texture, WebGLRenderer } from 'three';
import { BaseGPass, PassOptions } from './GPass.js';
export interface EdgesPassOptions extends PassOptions {
    depthMultiplier?: number;
    depthBias?: number;
    normalMultiplier?: number;
    normalBias?: number;
    outlineThickness?: number;
    outlineOpacity?: number;
    outlineColor?: number;
    backgroundColor?: number;
}
export declare const DefaultEdgesPassOptions: Required<EdgesPassOptions>;
export declare class EdgesPass extends BaseGPass {
    edgesMaterial: ShaderMaterial;
    private fsQuad;
    _options: Required<EdgesPassOptions>;
    set options(value: EdgesPassOptions);
    constructor();
    setTexture(uName: string, texture: Texture | undefined): void;
    get displayName(): string;
    update(camera: PerspectiveCamera | OrthographicCamera): void;
    render(renderer: WebGLRenderer): boolean;
    setSize(width: number, height: number): void;
}
