import z from 'zod';
export declare const jobPayload: z.ZodObject<{
    jobId: z.ZodString;
    serverUrl: z.ZodString;
    projectId: z.ZodString;
    modelId: z.ZodString;
    token: z.ZodString;
    blobId: z.ZodString;
    fileType: z.ZodString;
    fileName: z.ZodString;
    timeOutSeconds: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    modelId: string;
    projectId: string;
    jobId: string;
    serverUrl: string;
    token: string;
    blobId: string;
    fileType: string;
    fileName: string;
    timeOutSeconds: number;
}, {
    modelId: string;
    projectId: string;
    jobId: string;
    serverUrl: string;
    token: string;
    blobId: string;
    fileType: string;
    fileName: string;
    timeOutSeconds?: number | undefined;
}>;
export type JobPayload = z.infer<typeof jobPayload>;
declare const baseFileImportResult: z.ZodObject<{
    durationSeconds: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    durationSeconds: number;
}, {
    durationSeconds: number;
}>;
export type FileImportResult = z.infer<typeof baseFileImportResult>;
declare const fileImportSuccessPayload: z.ZodObject<{
    status: z.ZodLiteral<"success">;
    warnings: z.ZodArray<z.ZodString, "many">;
    result: z.ZodObject<{
        durationSeconds: z.ZodNumber;
        versionId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        versionId: string;
        durationSeconds: number;
    }, {
        versionId: string;
        durationSeconds: number;
    }>;
}, "strip", z.ZodTypeAny, {
    status: "success";
    warnings: string[];
    result: {
        versionId: string;
        durationSeconds: number;
    };
}, {
    status: "success";
    warnings: string[];
    result: {
        versionId: string;
        durationSeconds: number;
    };
}>;
export type FileImportSuccessPayload = z.infer<typeof fileImportSuccessPayload>;
declare const fileImportErrorPayload: z.ZodObject<{
    status: z.ZodLiteral<"error">;
    reason: z.ZodString;
    result: z.ZodObject<{
        durationSeconds: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        durationSeconds: number;
    }, {
        durationSeconds: number;
    }>;
}, "strip", z.ZodTypeAny, {
    status: "error";
    result: {
        durationSeconds: number;
    };
    reason: string;
}, {
    status: "error";
    result: {
        durationSeconds: number;
    };
    reason: string;
}>;
export type FileImportErrorPayload = z.infer<typeof fileImportErrorPayload>;
export declare const fileImportResultPayload: z.ZodDiscriminatedUnion<"status", [z.ZodObject<{
    status: z.ZodLiteral<"success">;
    warnings: z.ZodArray<z.ZodString, "many">;
    result: z.ZodObject<{
        durationSeconds: z.ZodNumber;
        versionId: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        versionId: string;
        durationSeconds: number;
    }, {
        versionId: string;
        durationSeconds: number;
    }>;
}, "strip", z.ZodTypeAny, {
    status: "success";
    warnings: string[];
    result: {
        versionId: string;
        durationSeconds: number;
    };
}, {
    status: "success";
    warnings: string[];
    result: {
        versionId: string;
        durationSeconds: number;
    };
}>, z.ZodObject<{
    status: z.ZodLiteral<"error">;
    reason: z.ZodString;
    result: z.ZodObject<{
        durationSeconds: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        durationSeconds: number;
    }, {
        durationSeconds: number;
    }>;
}, "strip", z.ZodTypeAny, {
    status: "error";
    result: {
        durationSeconds: number;
    };
    reason: string;
}, {
    status: "error";
    result: {
        durationSeconds: number;
    };
    reason: string;
}>]>;
export type FileImportResultPayload = z.infer<typeof fileImportResultPayload>;
export {};
//# sourceMappingURL=job.d.ts.map