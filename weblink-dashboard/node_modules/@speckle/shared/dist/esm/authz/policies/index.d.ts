import { AllAuthCheckContextLoaders } from '../domain/loaders.js';
export declare const authPoliciesFactory: (loaders: AllAuthCheckContextLoaders) => {
    project: {
        automation: {
            canCreate: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
            canRead: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
            canUpdate: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
            canDelete: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        };
        model: {
            canCreate: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"PersonalProjectsLimited", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceReadOnly", undefined> | import("../index.js").AuthError<"WorkspaceLimitsReached", {
                limit: keyof import("../../index.js").WorkspaceLimits;
            }> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
            canUpdate: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
            canDelete: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ModelContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined> | import("../index.js").AuthError<"ModelNotFound", undefined> | import("../index.js").AuthError<"ReservedModelNotDeletable", undefined>>>;
        };
        comment: {
            canCreate: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
            canArchive: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").CommentContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined> | import("../index.js").AuthError<"CommentNotFound", undefined>>>;
            canEdit: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").CommentContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined> | import("../index.js").AuthError<"CommentNotFound", undefined> | import("../index.js").AuthError<"CommentNoAccess", undefined>>>;
        };
        version: {
            canCreate: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
            canUpdate: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext & import("../domain/context.js").VersionContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined> | import("../index.js").AuthError<"VersionNotFound", undefined>>>;
            canReceive: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
            canRequestRender: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
                workspaceSlug: string;
            }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        };
        canBroadcastActivity: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canRead: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canMoveToWorkspace: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").MaybeProjectContext & import("../domain/context.js").MaybeWorkspaceContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspacesNotEnabled", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceReadOnly", undefined> | import("../index.js").AuthError<"WorkspaceLimitsReached", {
            limit: keyof import("../../index.js").WorkspaceLimits;
        }> | import("../index.js").AuthError<"WorkspaceProjectMoveInvalid", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"WorkspaceNoEditorSeat", undefined> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canCreatePersonal: (args: import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"PersonalProjectsLimited", undefined> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canUpdate: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canDelete: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canUpdateAllowPublicComments: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canReadSettings: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canReadWebhooks: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canLeave: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectLastOwner", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canInvite: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"PersonalProjectsLimited", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canPublish: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canLoad: (args: import("../domain/context.js").ProjectContext & import("../domain/context.js").MaybeUserContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
    };
    workspace: {
        canCreateProject: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").WorkspaceContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"WorkspacesNotEnabled", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceReadOnly", undefined> | import("../index.js").AuthError<"WorkspaceLimitsReached", {
            limit: keyof import("../../index.js").WorkspaceLimits;
        }> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"WorkspaceNoEditorSeat", undefined> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canInvite: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").WorkspaceContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"WorkspacesNotEnabled", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canReceiveProjectsUpdatedMessage: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").ProjectContext & import("../domain/context.js").WorkspaceContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"ProjectNotFound", undefined> | import("../index.js").AuthError<"ProjectNoAccess", undefined> | import("../index.js").AuthError<"ProjectNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
        canUpdateEmbedOptions: (args: import("../domain/context.js").MaybeUserContext & import("../domain/context.js").WorkspaceContext) => Promise<import("true-myth").Result<import("true-myth").Unit, import("../index.js").AuthError<"WorkspacesNotEnabled", undefined> | import("../index.js").AuthError<"WorkspaceNoAccess", undefined> | import("../index.js").AuthError<"WorkspaceNotEnoughPermissions", undefined> | import("../index.js").AuthError<"WorkspaceReadOnly", undefined> | import("../index.js").AuthError<"WorkspaceNoFeatureAccess", undefined> | import("../index.js").AuthError<"WorkspaceSsoSessionNoAccess", {
            workspaceSlug: string;
        }> | import("../index.js").AuthError<"ServerNoAccess", undefined> | import("../index.js").AuthError<"ServerNotEnoughPermissions", undefined> | import("../index.js").AuthError<"ServerNoSession", undefined>>>;
    };
};
export type AuthPolicies = ReturnType<typeof authPoliciesFactory>;
//# sourceMappingURL=index.d.ts.map