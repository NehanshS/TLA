import { AuthPolicy } from '../../domain/policies.js';
import { ServerNoAccessError, ServerNoSessionError, ServerNotEnoughPermissionsError, WorkspaceLimitsReachedError, WorkspaceNoAccessError, WorkspaceNoEditorSeatError, WorkspaceNotEnoughPermissionsError, WorkspaceReadOnlyError, WorkspacesNotEnabledError, WorkspaceSsoSessionNoAccessError } from '../../domain/authErrors.js';
import { MaybeUserContext, WorkspaceContext } from '../../domain/context.js';
export declare const canCreateWorkspaceProjectPolicy: AuthPolicy<'getEnv' | 'getServerRole' | 'getWorkspace' | 'getWorkspaceRole' | 'getWorkspaceSeat' | 'getWorkspacePlan' | 'getWorkspaceLimits' | 'getWorkspaceProjectCount' | 'getWorkspaceSsoProvider' | 'getWorkspaceSsoSession', MaybeUserContext & WorkspaceContext, InstanceType<typeof WorkspacesNotEnabledError> | InstanceType<typeof WorkspaceNoAccessError> | InstanceType<typeof WorkspaceReadOnlyError> | InstanceType<typeof WorkspaceNoEditorSeatError> | InstanceType<typeof WorkspaceNotEnoughPermissionsError> | InstanceType<typeof WorkspaceSsoSessionNoAccessError> | InstanceType<typeof WorkspaceLimitsReachedError> | InstanceType<typeof ServerNoSessionError> | InstanceType<typeof ServerNoAccessError> | InstanceType<typeof ServerNotEnoughPermissionsError>>;
//# sourceMappingURL=canCreateWorkspaceProject.d.ts.map