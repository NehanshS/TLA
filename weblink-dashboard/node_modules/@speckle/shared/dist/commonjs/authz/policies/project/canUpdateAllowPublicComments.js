"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.canUpdateProjectAllowPublicCommentsPolicy = void 0;
const result_1 = require("true-myth/result");
const authErrors_js_1 = require("../../domain/authErrors.js");
const canUpdate_js_1 = require("./canUpdate.js");
const types_js_1 = require("../../domain/projects/types.js");
const canUpdateProjectAllowPublicCommentsPolicy = (loaders) => async ({ userId, projectId }) => {
    // Invoke full canUpdate policy, that's still the base
    const canUpdate = await (0, canUpdate_js_1.canUpdateProjectPolicy)(loaders)({
        userId,
        projectId
    });
    if (canUpdate.isErr) {
        return (0, result_1.err)(canUpdate.error);
    }
    // Project must also be publicly visible
    const project = await loaders.getProject({ projectId });
    if (!project) {
        return (0, result_1.err)(new authErrors_js_1.ProjectNotFoundError());
    }
    const isPublic = project.visibility === types_js_1.ProjectVisibility.Public;
    return isPublic
        ? (0, result_1.ok)()
        : (0, result_1.err)(new authErrors_js_1.ProjectNoAccessError({
            message: 'Project must be public to allow public comments'
        }));
};
exports.canUpdateProjectAllowPublicCommentsPolicy = canUpdateProjectAllowPublicCommentsPolicy;
//# sourceMappingURL=canUpdateAllowPublicComments.js.map